{"ast":null,"code":"var _jsxFileName = \"/Users/iseung-won/Desktop/clone/frontend/src/MyComponent.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { dismissAll, dismissDrawer, presentDrawer } from './components/drawer/DrawerAction';\nimport { DrawerPosition } from './components/drawer/types';\nimport MainContainer from './MainContainer';\nimport DrawerItem from './components/drawer/components/DrawerItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyComponent = () => {\n  _s();\n  // Use the drawer state from Redux\n  // const drawerState = useSelector((state) => state.drawer);\n\n  const drawerState = useSelector(state => state.drawer);\n\n  // Dispatch function to dispatch actions\n\n  const dispatch = useDispatch();\n\n  // Open a new drawer item\n  const handleOpenDrawer = drawerPayload => {\n    dispatch(presentDrawer(drawerPayload));\n    console.log(drawerState, ' ###');\n  };\n\n  // Close a specific drawer item\n  const handleCloseDrawer = drawerId => {\n    dispatch(dismissDrawer(drawerId));\n  };\n\n  // Close all drawers\n  const handleCloseAllDrawers = () => {\n    dispatch(dismissAll());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 100\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleOpenDrawer({\n        component: MainContainer,\n        position: DrawerPosition.BOTTOM\n\n        //...other drawer properties\n      }),\n      children: \"Open New Drawer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), drawerState.items !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'red'\n      },\n      children: drawerState.items.map(drawer => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DrawerItem, {\n          payload: drawer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCloseDrawer(drawer.id),\n          children: \"Close Drawer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, drawer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCloseAllDrawers,\n      children: \"Close All Drawers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(MyComponent, \"b4HXCIZTjnRXl6BTVjQXLx01Byk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useDispatch","useSelector","dismissAll","dismissDrawer","presentDrawer","DrawerPosition","MainContainer","DrawerItem","jsxDEV","_jsxDEV","MyComponent","_s","drawerState","state","drawer","dispatch","handleOpenDrawer","drawerPayload","console","log","handleCloseDrawer","drawerId","handleCloseAllDrawers","style","height","children","onClick","component","position","BOTTOM","fileName","_jsxFileName","lineNumber","columnNumber","items","undefined","backgroundColor","map","payload","id","_c","$RefreshReg$"],"sources":["/Users/iseung-won/Desktop/clone/frontend/src/MyComponent.tsx"],"sourcesContent":["import React from 'react';\nimport { AppDispatch } from './redux/store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { dismissAll, dismissDrawer, presentDrawer } from './components/drawer/DrawerAction';\nimport { DrawerPosition } from './components/drawer/types';\nimport MainContainer from './MainContainer';\nimport DrawerItem from './components/drawer/components/DrawerItem';\nimport Drawer from './components/drawer/components/Drawer';\nconst MyComponent = () => {\n  // Use the drawer state from Redux\n  // const drawerState = useSelector((state) => state.drawer);\n\n  const drawerState = useSelector((state: any) => state.drawer);\n\n  // Dispatch function to dispatch actions\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  // Open a new drawer item\n  const handleOpenDrawer = (drawerPayload: any) => {\n    dispatch(presentDrawer(drawerPayload));\n    console.log(drawerState, ' ###');\n  };\n\n  // Close a specific drawer item\n  const handleCloseDrawer = (drawerId: any) => {\n    dispatch(dismissDrawer(drawerId));\n  };\n\n  // Close all drawers\n  const handleCloseAllDrawers = () => {\n    dispatch(dismissAll());\n  };\n\n  return (\n    <div style={{ height: 100 }}>\n      {/* Display a button to open a new drawer */}\n      <button\n        onClick={() =>\n          handleOpenDrawer({\n            component: MainContainer,\n            position: DrawerPosition.BOTTOM,\n\n            //...other drawer properties\n          })\n        }\n      >\n        Open New Drawer\n      </button>\n\n      {/* Display currently open drawers */}\n      {drawerState.items !== undefined && (\n        <div style={{ backgroundColor: 'red' }}>\n          {drawerState.items.map((drawer: any) => (\n            <div key={drawer.id}>\n              {/* <MainContainer /> */}\n              <DrawerItem payload={drawer} />\n              <button onClick={() => handleCloseDrawer(drawer.id)}>Close Drawer</button>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Button to close all drawers */}\n      <button onClick={handleCloseAllDrawers}>Close All Drawers</button>\n    </div>\n  );\n};\n\nexport default MyComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,aAAa,EAAEC,aAAa,QAAQ,kCAAkC;AAC3F,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA;;EAEA,MAAMC,WAAW,GAAGX,WAAW,CAAEY,KAAU,IAAKA,KAAK,CAACC,MAAM,CAAC;;EAE7D;;EAEA,MAAMC,QAAQ,GAAGf,WAAW,CAAc,CAAC;;EAE3C;EACA,MAAMgB,gBAAgB,GAAIC,aAAkB,IAAK;IAC/CF,QAAQ,CAACX,aAAa,CAACa,aAAa,CAAC,CAAC;IACtCC,OAAO,CAACC,GAAG,CAACP,WAAW,EAAE,MAAM,CAAC;EAClC,CAAC;;EAED;EACA,MAAMQ,iBAAiB,GAAIC,QAAa,IAAK;IAC3CN,QAAQ,CAACZ,aAAa,CAACkB,QAAQ,CAAC,CAAC;EACnC,CAAC;;EAED;EACA,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClCP,QAAQ,CAACb,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACEO,OAAA;IAAKc,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAE;IAAAC,QAAA,gBAE1BhB,OAAA;MACEiB,OAAO,EAAEA,CAAA,KACPV,gBAAgB,CAAC;QACfW,SAAS,EAAErB,aAAa;QACxBsB,QAAQ,EAAEvB,cAAc,CAACwB;;QAEzB;MACF,CAAC,CACF;MAAAJ,QAAA,EACF;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGRrB,WAAW,CAACsB,KAAK,KAAKC,SAAS,iBAC9B1B,OAAA;MAAKc,KAAK,EAAE;QAAEa,eAAe,EAAE;MAAM,CAAE;MAAAX,QAAA,EACpCb,WAAW,CAACsB,KAAK,CAACG,GAAG,CAAEvB,MAAW,iBACjCL,OAAA;QAAAgB,QAAA,gBAEEhB,OAAA,CAACF,UAAU;UAAC+B,OAAO,EAAExB;QAAO;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/BxB,OAAA;UAAQiB,OAAO,EAAEA,CAAA,KAAMN,iBAAiB,CAACN,MAAM,CAACyB,EAAE,CAAE;UAAAd,QAAA,EAAC;QAAY;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAHlEnB,MAAM,CAACyB,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eAGDxB,OAAA;MAAQiB,OAAO,EAAEJ,qBAAsB;MAAAG,QAAA,EAAC;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAACtB,EAAA,CA3DID,WAAW;EAAA,QAIKT,WAAW,EAIdD,WAAW;AAAA;AAAAwC,EAAA,GARxB9B,WAAW;AA6DjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}