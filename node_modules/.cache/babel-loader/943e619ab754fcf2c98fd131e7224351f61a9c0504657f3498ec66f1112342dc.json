{"ast":null,"code":"var _jsxFileName = \"/Users/iseung-won/Desktop/clone/frontend/src/components/drawer/components/DrawerItem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport './DrawerItem.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawerItem = ({\n  payload\n}) => {\n  _s();\n  const [mounted, setMounted] = useState(false);\n  const background = useRef(null);\n  const styles = {\n    backgroundColor: payload === null || payload === void 0 ? void 0 : payload.backgroundColor\n  };\n  const transitionName = getTransitionName();\n  useEffect(() => {\n    console.log('####');\n  }, []);\n  useEffect(() => {\n    (async () => {\n      await openDrawer();\n    })();\n  }, []);\n  async function openDrawer() {\n    await Promise.resolve();\n    setMounted(true);\n  }\n  async function closeDrawer() {\n    setMounted(false);\n    await Promise.resolve();\n    // TODO: Add the equivalent dismiss logic\n  }\n\n  function onMouseDown(e) {\n    if (payload !== null && payload !== void 0 && payload.canCloseForModal && e.target === background.current && e.which === 1) {\n      closeDrawer();\n    }\n  }\n  function getTransitionName() {\n    // TODO: Complete this logic based on your requirements\n  }\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    in: mounted,\n    timeout: 250,\n    className: transitionName,\n    unmountOnExit: true,\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `drawer-item ${getClassName()}`,\n      ref: background,\n      onMouseDown: onMouseDown,\n      onTouchStart: onMouseDown,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: styles,\n        onClick: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(payload.component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n  function getClassName() {\n    // TODO: This function will generate a class name based on the payload properties.\n  }\n};\n_s(DrawerItem, \"+Z1FkM/hB3bLdCUaIA023629ze8=\");\n_c = DrawerItem;\nDrawerItem.propTypes = {\n  payload: PropTypes.object.isRequired\n};\nexport default DrawerItem;\nvar _c;\n$RefreshReg$(_c, \"DrawerItem\");","map":{"version":3,"names":["React","useState","useEffect","useRef","PropTypes","CSSTransition","jsxDEV","_jsxDEV","DrawerItem","payload","_s","mounted","setMounted","background","styles","backgroundColor","transitionName","getTransitionName","console","log","openDrawer","Promise","resolve","closeDrawer","onMouseDown","e","canCloseForModal","target","current","which","in","timeout","className","unmountOnExit","children","getClassName","ref","onTouchStart","style","onClick","stopPropagation","component","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","object","isRequired","$RefreshReg$"],"sources":["/Users/iseung-won/Desktop/clone/frontend/src/components/drawer/components/DrawerItem.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport MainContainer from '../../../MainContainer';\nimport './DrawerItem.scss';\n\nconst DrawerItem = ({ payload }: any) => {\n  const [mounted, setMounted] = useState(false);\n  const background = useRef(null);\n\n  const styles = { backgroundColor: payload?.backgroundColor };\n  const transitionName = getTransitionName();\n\n  useEffect(() => {\n    console.log('####');\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      await openDrawer();\n    })();\n  }, []);\n\n  async function openDrawer() {\n    await Promise.resolve();\n    setMounted(true);\n  }\n\n  async function closeDrawer() {\n    setMounted(false);\n    await Promise.resolve();\n    // TODO: Add the equivalent dismiss logic\n  }\n\n  function onMouseDown(e: any) {\n    if (payload?.canCloseForModal && e.target === background.current && e.which === 1) {\n      closeDrawer();\n    }\n  }\n\n  function getTransitionName() {\n    // TODO: Complete this logic based on your requirements\n  }\n\n  return (\n    <CSSTransition in={mounted} timeout={250} className={transitionName} unmountOnExit>\n      <li\n        className={`drawer-item ${getClassName()}`}\n        ref={background}\n        onMouseDown={onMouseDown}\n        onTouchStart={onMouseDown}\n      >\n        <div className=\"container\" style={styles} onClick={(e) => e.stopPropagation()}>\n          {/* Dynamic component rendering... */}\n          {/* <MainContainer /> */}\n          <payload.component />\n        </div>\n      </li>\n    </CSSTransition>\n  );\n\n  function getClassName() {\n    // TODO: This function will generate a class name based on the payload properties.\n  }\n};\n\nDrawerItem.propTypes = {\n  payload: PropTypes.object.isRequired,\n};\n\nexport default DrawerItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,aAAa,QAAQ,wBAAwB;AAEtD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMY,UAAU,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE/B,MAAMW,MAAM,GAAG;IAAEC,eAAe,EAAEN,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEM;EAAgB,CAAC;EAC5D,MAAMC,cAAc,GAAGC,iBAAiB,CAAC,CAAC;EAE1Cf,SAAS,CAAC,MAAM;IACdgB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMkB,UAAU,CAAC,CAAC;IACpB,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeA,UAAUA,CAAA,EAAG;IAC1B,MAAMC,OAAO,CAACC,OAAO,CAAC,CAAC;IACvBV,UAAU,CAAC,IAAI,CAAC;EAClB;EAEA,eAAeW,WAAWA,CAAA,EAAG;IAC3BX,UAAU,CAAC,KAAK,CAAC;IACjB,MAAMS,OAAO,CAACC,OAAO,CAAC,CAAC;IACvB;EACF;;EAEA,SAASE,WAAWA,CAACC,CAAM,EAAE;IAC3B,IAAIhB,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEiB,gBAAgB,IAAID,CAAC,CAACE,MAAM,KAAKd,UAAU,CAACe,OAAO,IAAIH,CAAC,CAACI,KAAK,KAAK,CAAC,EAAE;MACjFN,WAAW,CAAC,CAAC;IACf;EACF;EAEA,SAASN,iBAAiBA,CAAA,EAAG;IAC3B;EAAA;EAGF,oBACEV,OAAA,CAACF,aAAa;IAACyB,EAAE,EAAEnB,OAAQ;IAACoB,OAAO,EAAE,GAAI;IAACC,SAAS,EAAEhB,cAAe;IAACiB,aAAa;IAAAC,QAAA,eAChF3B,OAAA;MACEyB,SAAS,EAAG,eAAcG,YAAY,CAAC,CAAE,EAAE;MAC3CC,GAAG,EAAEvB,UAAW;MAChBW,WAAW,EAAEA,WAAY;MACzBa,YAAY,EAAEb,WAAY;MAAAU,QAAA,eAE1B3B,OAAA;QAAKyB,SAAS,EAAC,WAAW;QAACM,KAAK,EAAExB,MAAO;QAACyB,OAAO,EAAGd,CAAC,IAAKA,CAAC,CAACe,eAAe,CAAC,CAAE;QAAAN,QAAA,eAG5E3B,OAAA,CAACE,OAAO,CAACgC,SAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;EAGlB,SAASV,YAAYA,CAAA,EAAG;IACtB;EAAA;AAEJ,CAAC;AAACzB,EAAA,CA1DIF,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AA4DhBA,UAAU,CAACuC,SAAS,GAAG;EACrBtC,OAAO,EAAEL,SAAS,CAAC4C,MAAM,CAACC;AAC5B,CAAC;AAED,eAAezC,UAAU;AAAC,IAAAsC,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}