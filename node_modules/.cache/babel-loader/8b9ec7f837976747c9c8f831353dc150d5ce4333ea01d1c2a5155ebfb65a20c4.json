{"ast":null,"code":"var _jsxFileName = \"/Users/iseung-won/Desktop/clone/frontend/src/MyComponent.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyComponent = () => {\n  _s();\n  // Use the drawer state from Redux\n  // const drawerState = useSelector((state) => state.drawer);\n\n  // Dispatch function to dispatch actions\n  const dispatch = useDispatch();\n\n  // Open a new drawer item\n  const handleOpenDrawer = drawerPayload => {\n    dispatch(presentDrawer(drawerPayload));\n  };\n\n  // Close a specific drawer item\n  const handleCloseDrawer = drawerId => {\n    // dispatch(dismissDrawer(drawerId));\n  };\n\n  // Close all drawers\n  const handleCloseAllDrawers = () => {\n    // dispatch(dismissAll());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleOpenDrawer({\n        id: 'sampleId',\n        component: 'SampleComponent'\n        //...other drawer properties\n      }),\n      children: \"Open New Drawer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCloseAllDrawers,\n      children: \"Close All Drawers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(MyComponent, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useDispatch","jsxDEV","_jsxDEV","MyComponent","_s","dispatch","handleOpenDrawer","drawerPayload","presentDrawer","handleCloseDrawer","drawerId","handleCloseAllDrawers","children","onClick","id","component","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/iseung-won/Desktop/clone/frontend/src/MyComponent.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst MyComponent = () => {\n  // Use the drawer state from Redux\n  // const drawerState = useSelector((state) => state.drawer);\n\n  // Dispatch function to dispatch actions\n  const dispatch = useDispatch();\n\n  // Open a new drawer item\n  const handleOpenDrawer = (drawerPayload) => {\n    dispatch(presentDrawer(drawerPayload));\n  };\n\n  // Close a specific drawer item\n  const handleCloseDrawer = (drawerId) => {\n    // dispatch(dismissDrawer(drawerId));\n  };\n\n  // Close all drawers\n  const handleCloseAllDrawers = () => {\n    // dispatch(dismissAll());\n  };\n\n  return (\n    <div>\n      {/* Display a button to open a new drawer */}\n      <button\n        onClick={() =>\n          handleOpenDrawer({\n            id: 'sampleId',\n            component: 'SampleComponent',\n            //...other drawer properties\n          })\n        }\n      >\n        Open New Drawer\n      </button>\n\n      {/* Display currently open drawers */}\n\n      {/* Button to close all drawers */}\n      <button onClick={handleCloseAllDrawers}>Close All Drawers</button>\n    </div>\n  );\n};\n\nexport default MyComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA;;EAEA;EACA,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMM,gBAAgB,GAAIC,aAAa,IAAK;IAC1CF,QAAQ,CAACG,aAAa,CAACD,aAAa,CAAC,CAAC;EACxC,CAAC;;EAED;EACA,MAAME,iBAAiB,GAAIC,QAAQ,IAAK;IACtC;EAAA,CACD;;EAED;EACA,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClC;EAAA,CACD;EAED,oBACET,OAAA;IAAAU,QAAA,gBAEEV,OAAA;MACEW,OAAO,EAAEA,CAAA,KACPP,gBAAgB,CAAC;QACfQ,EAAE,EAAE,UAAU;QACdC,SAAS,EAAE;QACX;MACF,CAAC,CACF;MAAAH,QAAA,EACF;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAKTjB,OAAA;MAAQW,OAAO,EAAEF,qBAAsB;MAAAC,QAAA,EAAC;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAACf,EAAA,CA3CID,WAAW;EAAA,QAKEH,WAAW;AAAA;AAAAoB,EAAA,GALxBjB,WAAW;AA6CjB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}