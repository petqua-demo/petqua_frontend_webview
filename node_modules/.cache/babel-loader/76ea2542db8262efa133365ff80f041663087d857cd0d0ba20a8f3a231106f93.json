{"ast":null,"code":"var _jsxFileName = \"/Users/iseung-won/Desktop/clone/frontend/src/MyComponent.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useAppDispatch } from './modules/redux/store';\nimport { dismissAll, presentDrawer } from './components/drawer/DrawerAction';\nimport { DrawerPosition } from './components/drawer/types';\nimport MainContainer from './MainContainer';\nimport { styled } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DivWrap = styled.div`\n  width: 100%;\n  height: 100%;\n  /* background-color: #000; */\n`;\n_c = DivWrap;\nconst MyComponent = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  // Use the drawer state from Redux\n  const drawerState = useSelector(state => state.drawer);\n  return /*#__PURE__*/_jsxDEV(DivWrap, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () =>\n      // handleOpenDrawer({\n      //   component: MainContainer,\n      //   position: DrawerPosition.BOTTOM,\n      //   // size: DrawerSize.FULL,\n      //   // useCloseButton: false,\n      //   event: {\n      //     onClose: () => {\n      //       dispatch(dismissAll());\n      //     },\n      //   },\n      //   //...other drawer properties\n      // })\n      dispatch(presentDrawer({\n        component: MainContainer,\n        position: DrawerPosition.BOTTOM,\n        // transitionName: 'down',\n        // size: DrawerSize.FULL,\n        // useCloseButton: false,\n        event: {\n          onClose: () => {\n            dispatch(dismissAll());\n          }\n        }\n      })),\n      children: \"Open New Drawer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(MyComponent, \"aCitJ5POgodJypehQ85fZg6FDsg=\", true, function () {\n  return [useAppDispatch];\n});\n_c2 = MyComponent;\nexport default MyComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"DivWrap\");\n$RefreshReg$(_c2, \"MyComponent\");","map":{"version":3,"names":["React","useAppDispatch","dismissAll","presentDrawer","DrawerPosition","MainContainer","styled","jsxDEV","_jsxDEV","DivWrap","div","_c","MyComponent","_s","dispatch","drawerState","useSelector","state","drawer","children","onClick","component","position","BOTTOM","event","onClose","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/iseung-won/Desktop/clone/frontend/src/MyComponent.tsx"],"sourcesContent":["import React from 'react';\nimport { AppDispatch, useAppDispatch } from './modules/redux/store';\nimport { dismissAll, dismissDrawer, presentDrawer } from './components/drawer/DrawerAction';\nimport { DrawerPosition, DrawerSize } from './components/drawer/types';\nimport MainContainer from './MainContainer';\nimport DrawerItem from './components/drawer/components/DrawerItem';\nimport Drawer from './components/drawer/components/Drawer';\nimport { styled } from 'styled-components';\n\nconst DivWrap = styled.div`\n  width: 100%;\n  height: 100%;\n  /* background-color: #000; */\n`;\n\nconst MyComponent = () => {\n  const dispatch = useAppDispatch();\n  // Use the drawer state from Redux\n  const drawerState = useSelector((state) => state.drawer);\n\n  return (\n    <DivWrap>\n      {/* Display a button to open a new drawer */}\n      <button\n        onClick={() =>\n          // handleOpenDrawer({\n          //   component: MainContainer,\n          //   position: DrawerPosition.BOTTOM,\n          //   // size: DrawerSize.FULL,\n          //   // useCloseButton: false,\n          //   event: {\n          //     onClose: () => {\n          //       dispatch(dismissAll());\n          //     },\n          //   },\n          //   //...other drawer properties\n          // })\n          dispatch(\n            presentDrawer({\n              component: MainContainer,\n              position: DrawerPosition.BOTTOM,\n              // transitionName: 'down',\n              // size: DrawerSize.FULL,\n              // useCloseButton: false,\n              event: {\n                onClose: () => {\n                  dispatch(dismissAll());\n                },\n              },\n            }),\n          )\n        }\n      >\n        Open New Drawer\n      </button>\n    </DivWrap>\n  );\n};\n\nexport default MyComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAsBC,cAAc,QAAQ,uBAAuB;AACnE,SAASC,UAAU,EAAiBC,aAAa,QAAQ,kCAAkC;AAC3F,SAASC,cAAc,QAAoB,2BAA2B;AACtE,OAAOC,aAAa,MAAM,iBAAiB;AAG3C,SAASC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;AAC3B;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,OAAO;AAMb,MAAMG,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGb,cAAc,CAAC,CAAC;EACjC;EACA,MAAMc,WAAW,GAAGC,WAAW,CAAEC,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAC;EAExD,oBACEV,OAAA,CAACC,OAAO;IAAAU,QAAA,eAENX,OAAA;MACEY,OAAO,EAAEA,CAAA;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAN,QAAQ,CACNX,aAAa,CAAC;QACZkB,SAAS,EAAEhB,aAAa;QACxBiB,QAAQ,EAAElB,cAAc,CAACmB,MAAM;QAC/B;QACA;QACA;QACAC,KAAK,EAAE;UACLC,OAAO,EAAEA,CAAA,KAAM;YACbX,QAAQ,CAACZ,UAAU,CAAC,CAAC,CAAC;UACxB;QACF;MACF,CAAC,CACH,CACD;MAAAiB,QAAA,EACF;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd,CAAC;AAAChB,EAAA,CA1CID,WAAW;EAAA,QACEX,cAAc;AAAA;AAAA6B,GAAA,GAD3BlB,WAAW;AA4CjB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}