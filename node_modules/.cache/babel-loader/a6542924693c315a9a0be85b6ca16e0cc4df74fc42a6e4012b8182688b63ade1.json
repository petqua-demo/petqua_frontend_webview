{"ast":null,"code":"var _jsxFileName = \"/Users/iseung-won/Desktop/clone/frontend/src/MyComponent.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { dismissAll, dismissDrawer, presentDrawer } from './components/drawer/DrawerAction';\nimport { DrawerPosition } from './components/drawer/types';\nimport MainContainer from './MainContainer';\nimport Drawer from './components/drawer/components/Drawer';\nimport { styled } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DivWrap = styled.div`\n  width: 100%;\n  height: 100%;\n  /* background-color: #000; */\n`;\n_c = DivWrap;\nconst MyComponent = () => {\n  _s();\n  // Use the drawer state from Redux\n  // const drawerState = useSelector((state) => state.drawer);\n\n  const drawerState = useSelector(state => state.drawer);\n\n  // Dispatch function to dispatch actions\n\n  const dispatch = useDispatch();\n\n  // Open a new drawer item\n  const handleOpenDrawer = drawerPayload => {\n    dispatch(presentDrawer(drawerPayload));\n    console.log(drawerState, ' ###');\n  };\n\n  // Close a specific drawer item\n  const handleCloseDrawer = drawerId => {\n    dispatch(dismissDrawer(drawerId));\n  };\n\n  // Close all drawers\n  const handleCloseAllDrawers = () => {\n    dispatch(dismissAll());\n  };\n  return /*#__PURE__*/_jsxDEV(DivWrap, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleOpenDrawer({\n        component: MainContainer,\n        position: DrawerPosition.BOTTOM\n\n        //...other drawer properties\n      }),\n      children: \"Open New Drawer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), drawerState.items !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Drawer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCloseAllDrawers,\n      children: \"Close All Drawers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(MyComponent, \"b4HXCIZTjnRXl6BTVjQXLx01Byk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c2 = MyComponent;\nexport default MyComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"DivWrap\");\n$RefreshReg$(_c2, \"MyComponent\");","map":{"version":3,"names":["React","useDispatch","useSelector","dismissAll","dismissDrawer","presentDrawer","DrawerPosition","MainContainer","Drawer","styled","jsxDEV","_jsxDEV","DivWrap","div","_c","MyComponent","_s","drawerState","state","drawer","dispatch","handleOpenDrawer","drawerPayload","console","log","handleCloseDrawer","drawerId","handleCloseAllDrawers","children","onClick","component","position","BOTTOM","fileName","_jsxFileName","lineNumber","columnNumber","items","undefined","_c2","$RefreshReg$"],"sources":["/Users/iseung-won/Desktop/clone/frontend/src/MyComponent.tsx"],"sourcesContent":["import React from 'react';\nimport { AppDispatch } from './redux/store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { dismissAll, dismissDrawer, presentDrawer } from './components/drawer/DrawerAction';\nimport { DrawerPosition } from './components/drawer/types';\nimport MainContainer from './MainContainer';\nimport DrawerItem from './components/drawer/components/DrawerItem';\nimport Drawer from './components/drawer/components/Drawer';\nimport { styled } from 'styled-components';\n\nconst DivWrap = styled.div`\n  width: 100%;\n  height: 100%;\n  /* background-color: #000; */\n`;\n\nconst MyComponent = () => {\n  // Use the drawer state from Redux\n  // const drawerState = useSelector((state) => state.drawer);\n\n  const drawerState = useSelector((state: any) => state.drawer);\n\n  // Dispatch function to dispatch actions\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  // Open a new drawer item\n  const handleOpenDrawer = (drawerPayload: any) => {\n    dispatch(presentDrawer(drawerPayload));\n    console.log(drawerState, ' ###');\n  };\n\n  // Close a specific drawer item\n  const handleCloseDrawer = (drawerId: any) => {\n    dispatch(dismissDrawer(drawerId));\n  };\n\n  // Close all drawers\n  const handleCloseAllDrawers = () => {\n    dispatch(dismissAll());\n  };\n\n  return (\n    <DivWrap>\n      {/* Display a button to open a new drawer */}\n      <button\n        onClick={() =>\n          handleOpenDrawer({\n            component: MainContainer,\n            position: DrawerPosition.BOTTOM,\n\n            //...other drawer properties\n          })\n        }\n      >\n        Open New Drawer\n      </button>\n\n      {/* Display currently open drawers */}\n      {drawerState.items !== undefined && (\n        <div>\n          <Drawer />\n        </div>\n      )}\n\n      {/* Button to close all drawers */}\n      <button onClick={handleCloseAllDrawers}>Close All Drawers</button>\n    </DivWrap>\n  );\n};\n\nexport default MyComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,aAAa,EAAEC,aAAa,QAAQ,kCAAkC;AAC3F,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,OAAOC,aAAa,MAAM,iBAAiB;AAE3C,OAAOC,MAAM,MAAM,uCAAuC;AAC1D,SAASC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;AAC3B;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,OAAO;AAMb,MAAMG,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA;;EAEA,MAAMC,WAAW,GAAGf,WAAW,CAAEgB,KAAU,IAAKA,KAAK,CAACC,MAAM,CAAC;;EAE7D;;EAEA,MAAMC,QAAQ,GAAGnB,WAAW,CAAc,CAAC;;EAE3C;EACA,MAAMoB,gBAAgB,GAAIC,aAAkB,IAAK;IAC/CF,QAAQ,CAACf,aAAa,CAACiB,aAAa,CAAC,CAAC;IACtCC,OAAO,CAACC,GAAG,CAACP,WAAW,EAAE,MAAM,CAAC;EAClC,CAAC;;EAED;EACA,MAAMQ,iBAAiB,GAAIC,QAAa,IAAK;IAC3CN,QAAQ,CAAChB,aAAa,CAACsB,QAAQ,CAAC,CAAC;EACnC,CAAC;;EAED;EACA,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClCP,QAAQ,CAACjB,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACEQ,OAAA,CAACC,OAAO;IAAAgB,QAAA,gBAENjB,OAAA;MACEkB,OAAO,EAAEA,CAAA,KACPR,gBAAgB,CAAC;QACfS,SAAS,EAAEvB,aAAa;QACxBwB,QAAQ,EAAEzB,cAAc,CAAC0B;;QAEzB;MACF,CAAC,CACF;MAAAJ,QAAA,EACF;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGRnB,WAAW,CAACoB,KAAK,KAAKC,SAAS,iBAC9B3B,OAAA;MAAAiB,QAAA,eACEjB,OAAA,CAACH,MAAM;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACN,eAGDzB,OAAA;MAAQkB,OAAO,EAAEF,qBAAsB;MAAAC,QAAA,EAAC;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEd,CAAC;AAACpB,EAAA,CArDID,WAAW;EAAA,QAIKb,WAAW,EAIdD,WAAW;AAAA;AAAAsC,GAAA,GARxBxB,WAAW;AAuDjB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAyB,GAAA;AAAAC,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}