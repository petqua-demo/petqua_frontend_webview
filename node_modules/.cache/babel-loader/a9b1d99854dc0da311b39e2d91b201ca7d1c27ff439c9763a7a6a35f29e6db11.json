{"ast":null,"code":"import _slicedToArray from\"/Users/iseung-won/Desktop/clone/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import*as s from'../styles/categoryFilterStyle';import{useAppDispatch}from'../../../../modules/redux/store';import{success}from'../../../../components/modules/toast/ToastAction';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CategoryFilter=function CategoryFilter(_ref){var _data$Filter,_data$Filter2;var payload=_ref.payload,close=_ref.close;var data=payload.data;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),isCheck=_useState2[0],setIsCheck=_useState2[1];var dispatch=useAppDispatch();function handleClose(){close();setTimeout(function(){dispatch(success({message:'필터가 적용되었습니다.'}));},250);}return/*#__PURE__*/_jsxs(s.CategoryFilterContainer,{children:[/*#__PURE__*/_jsx(s.CategoryFilterHeader,{children:/*#__PURE__*/_jsx(s.CategoryFilterHeaderTitle,{children:data===null||data===void 0?void 0:(_data$Filter=data.Filter)===null||_data$Filter===void 0?void 0:_data$Filter.title})}),/*#__PURE__*/_jsx(s.CategoryFilterBody,{children:data===null||data===void 0?void 0:(_data$Filter2=data.Filter)===null||_data$Filter2===void 0?void 0:_data$Filter2.items.map(function(item){return/*#__PURE__*/_jsxs(s.CategoryFilterBodyItem,{onClick:function onClick(){return setIsCheck(item.id);},id:item.id,children:[/*#__PURE__*/_jsx(s.CategoryFilterBodyItemCircle,{children:isCheck===item.id&&/*#__PURE__*/_jsx(s.CategoryFilterBodyItemCircleInner,{})}),/*#__PURE__*/_jsx(s.CategoryFilterItemTitle,{children:item.name})]});})}),/*#__PURE__*/_jsx(s.CategoryFilterButtonContainer,{children:/*#__PURE__*/_jsx(s.CategoryFilterButton,{onClick:handleClose,children:\"\\uC801\\uC6A9\\uD558\\uAE30\"})})]});};export default CategoryFilter;","map":{"version":3,"names":["useState","s","useAppDispatch","success","jsx","_jsx","jsxs","_jsxs","CategoryFilter","_ref","_data$Filter","_data$Filter2","payload","close","data","_useState","_useState2","_slicedToArray","isCheck","setIsCheck","dispatch","handleClose","setTimeout","message","CategoryFilterContainer","children","CategoryFilterHeader","CategoryFilterHeaderTitle","Filter","title","CategoryFilterBody","items","map","item","CategoryFilterBodyItem","onClick","id","CategoryFilterBodyItemCircle","CategoryFilterBodyItemCircleInner","CategoryFilterItemTitle","name","CategoryFilterButtonContainer","CategoryFilterButton"],"sources":["/Users/iseung-won/Desktop/clone/frontend/src/components/resources/category/container/categoryFilter.tsx"],"sourcesContent":["import { useState } from 'react';\nimport * as s from '../styles/categoryFilterStyle';\nimport { useAppDispatch } from '../../../../modules/redux/store';\nimport { success } from '../../../../components/modules/toast/ToastAction';\n\nconst CategoryFilter = ({ payload, close }: any) => {\n  const { data } = payload;\n  const [isCheck, setIsCheck] = useState(0);\n  const dispatch = useAppDispatch();\n\n  function handleClose() {\n    close();\n    setTimeout(() => {\n      dispatch(success({ message: '필터가 적용되었습니다.' }));\n    }, 250);\n  }\n  return (\n    <s.CategoryFilterContainer>\n      <s.CategoryFilterHeader>\n        <s.CategoryFilterHeaderTitle>{data?.Filter?.title}</s.CategoryFilterHeaderTitle>\n      </s.CategoryFilterHeader>\n      <s.CategoryFilterBody>\n        {data?.Filter?.items.map((item: any) => (\n          <s.CategoryFilterBodyItem onClick={() => setIsCheck(item.id)} id={item.id}>\n            <s.CategoryFilterBodyItemCircle>\n              {isCheck === item.id && <s.CategoryFilterBodyItemCircleInner />}\n            </s.CategoryFilterBodyItemCircle>\n            <s.CategoryFilterItemTitle>{item.name}</s.CategoryFilterItemTitle>\n          </s.CategoryFilterBodyItem>\n        ))}\n      </s.CategoryFilterBody>\n      <s.CategoryFilterButtonContainer>\n        <s.CategoryFilterButton onClick={handleClose}>적용하기</s.CategoryFilterButton>\n      </s.CategoryFilterButtonContainer>\n    </s.CategoryFilterContainer>\n  );\n};\n\nexport default CategoryFilter;\n"],"mappings":"8HAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,GAAK,CAAAC,CAAC,KAAM,+BAA+B,CAClD,OAASC,cAAc,KAAQ,iCAAiC,CAChE,OAASC,OAAO,KAAQ,kDAAkD,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE3E,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAAC,IAAA,CAAgC,KAAAC,YAAA,CAAAC,aAAA,IAA1B,CAAAC,OAAO,CAAAH,IAAA,CAAPG,OAAO,CAAEC,KAAK,CAAAJ,IAAA,CAALI,KAAK,CACtC,GAAQ,CAAAC,IAAI,CAAKF,OAAO,CAAhBE,IAAI,CACZ,IAAAC,SAAA,CAA8Bf,QAAQ,CAAC,CAAC,CAAC,CAAAgB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAlCG,OAAO,CAAAF,UAAA,IAAEG,UAAU,CAAAH,UAAA,IAC1B,GAAM,CAAAI,QAAQ,CAAGlB,cAAc,CAAC,CAAC,CAEjC,QAAS,CAAAmB,WAAWA,CAAA,CAAG,CACrBR,KAAK,CAAC,CAAC,CACPS,UAAU,CAAC,UAAM,CACfF,QAAQ,CAACjB,OAAO,CAAC,CAAEoB,OAAO,CAAE,cAAe,CAAC,CAAC,CAAC,CAChD,CAAC,CAAE,GAAG,CAAC,CACT,CACA,mBACEhB,KAAA,CAACN,CAAC,CAACuB,uBAAuB,EAAAC,QAAA,eACxBpB,IAAA,CAACJ,CAAC,CAACyB,oBAAoB,EAAAD,QAAA,cACrBpB,IAAA,CAACJ,CAAC,CAAC0B,yBAAyB,EAAAF,QAAA,CAAEX,IAAI,SAAJA,IAAI,kBAAAJ,YAAA,CAAJI,IAAI,CAAEc,MAAM,UAAAlB,YAAA,iBAAZA,YAAA,CAAcmB,KAAK,CAA8B,CAAC,CAC1D,CAAC,cACzBxB,IAAA,CAACJ,CAAC,CAAC6B,kBAAkB,EAAAL,QAAA,CAClBX,IAAI,SAAJA,IAAI,kBAAAH,aAAA,CAAJG,IAAI,CAAEc,MAAM,UAAAjB,aAAA,iBAAZA,aAAA,CAAcoB,KAAK,CAACC,GAAG,CAAC,SAACC,IAAS,qBACjC1B,KAAA,CAACN,CAAC,CAACiC,sBAAsB,EAACC,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAhB,UAAU,CAACc,IAAI,CAACG,EAAE,CAAC,EAAC,CAACA,EAAE,CAAEH,IAAI,CAACG,EAAG,CAAAX,QAAA,eACxEpB,IAAA,CAACJ,CAAC,CAACoC,4BAA4B,EAAAZ,QAAA,CAC5BP,OAAO,GAAKe,IAAI,CAACG,EAAE,eAAI/B,IAAA,CAACJ,CAAC,CAACqC,iCAAiC,GAAE,CAAC,CACjC,CAAC,cACjCjC,IAAA,CAACJ,CAAC,CAACsC,uBAAuB,EAAAd,QAAA,CAAEQ,IAAI,CAACO,IAAI,CAA4B,CAAC,EAC1C,CAAC,EAC5B,CAAC,CACkB,CAAC,cACvBnC,IAAA,CAACJ,CAAC,CAACwC,6BAA6B,EAAAhB,QAAA,cAC9BpB,IAAA,CAACJ,CAAC,CAACyC,oBAAoB,EAACP,OAAO,CAAEd,WAAY,CAAAI,QAAA,CAAC,0BAAI,CAAwB,CAAC,CAC5C,CAAC,EACT,CAAC,CAEhC,CAAC,CAED,cAAe,CAAAjB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}