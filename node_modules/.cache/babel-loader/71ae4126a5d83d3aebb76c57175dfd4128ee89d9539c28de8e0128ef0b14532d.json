{"ast":null,"code":"var _jsxFileName = \"/Users/iseung-won/Desktop/clone/frontend/src/components/drawer/components/DrawerItem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './Drawer.css';\nimport { styled } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyleLi = styled.li`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n  transition: all 0.3s ease-in-out;\n  &.up {\n    transform: translateY(0%);\n    position: fixed;\n    bottom: 0;\n  }\n  &.down {\n    transform: translateY(0);\n  }\n  &.left {\n    transform: translateX(-100%);\n  }\n  &.right {\n    transform: translateX(100%);\n  }\n  &.fade {\n    opacity: 0;\n  }\n`;\n_c = StyleLi;\nconst DrawerItem = ({\n  payload\n}) => {\n  _s();\n  const [mounted, setMounted] = useState(false);\n  const background = useRef(null);\n  const styles = {\n    backgroundColor: payload === null || payload === void 0 ? void 0 : payload.backgroundColor\n  };\n  const transitionName = getTransitionName();\n  useEffect(() => {\n    console.log('####');\n  }, []);\n  useEffect(() => {\n    (async () => {\n      await openDrawer();\n    })();\n  }, []);\n  async function openDrawer() {\n    await Promise.resolve();\n    setMounted(true);\n  }\n  async function closeDrawer() {\n    setMounted(false);\n    await Promise.resolve();\n    // TODO: Add the equivalent dismiss logic\n  }\n\n  function onMouseDown(e) {\n    if (payload !== null && payload !== void 0 && payload.canCloseForModal && e.target === background.current && e.which === 1) {\n      closeDrawer();\n    }\n  }\n  function getTransitionName() {\n    // TODO: Complete this logic based on your requirements\n    return 'drawer-item';\n  }\n  return /*#__PURE__*/_jsxDEV(TransitionGroup, {\n    className: \"transition-group\",\n    children: /*#__PURE__*/_jsxDEV(CSSTransition, {\n      in: mounted,\n      timeout: 250,\n      classNames: \"up\",\n      children: /*#__PURE__*/_jsxDEV(StyleLi, {\n        className: `up`,\n        ref: background,\n        onMouseDown: onMouseDown,\n        onTouchStart: onMouseDown,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          style: styles,\n          onClick: e => e.stopPropagation(),\n          children: /*#__PURE__*/_jsxDEV(payload.component, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n  function getClassName() {\n    // TODO: This function will generate a class name based on the payload properties.\n  }\n};\n_s(DrawerItem, \"+Z1FkM/hB3bLdCUaIA023629ze8=\");\n_c2 = DrawerItem;\nDrawerItem.propTypes = {\n  payload: PropTypes.object.isRequired\n};\nexport default DrawerItem;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyleLi\");\n$RefreshReg$(_c2, \"DrawerItem\");","map":{"version":3,"names":["React","useState","useEffect","useRef","PropTypes","CSSTransition","TransitionGroup","styled","jsxDEV","_jsxDEV","StyleLi","li","_c","DrawerItem","payload","_s","mounted","setMounted","background","styles","backgroundColor","transitionName","getTransitionName","console","log","openDrawer","Promise","resolve","closeDrawer","onMouseDown","e","canCloseForModal","target","current","which","className","children","in","timeout","classNames","ref","onTouchStart","style","onClick","stopPropagation","component","fileName","_jsxFileName","lineNumber","columnNumber","getClassName","_c2","propTypes","object","isRequired","$RefreshReg$"],"sources":["/Users/iseung-won/Desktop/clone/frontend/src/components/drawer/components/DrawerItem.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport MainContainer from '../../../MainContainer';\nimport './Drawer.css';\nimport { styled } from 'styled-components';\n\nconst StyleLi = styled.li`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n  transition: all 0.3s ease-in-out;\n  &.up {\n    transform: translateY(0%);\n    position: fixed;\n    bottom: 0;\n  }\n  &.down {\n    transform: translateY(0);\n  }\n  &.left {\n    transform: translateX(-100%);\n  }\n  &.right {\n    transform: translateX(100%);\n  }\n  &.fade {\n    opacity: 0;\n  }\n`;\n\nconst DrawerItem = ({ payload }: any) => {\n  const [mounted, setMounted] = useState(false);\n  const background = useRef(null);\n\n  const styles = { backgroundColor: payload?.backgroundColor };\n  const transitionName = getTransitionName();\n\n  useEffect(() => {\n    console.log('####');\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      await openDrawer();\n    })();\n  }, []);\n\n  async function openDrawer() {\n    await Promise.resolve();\n    setMounted(true);\n  }\n\n  async function closeDrawer() {\n    setMounted(false);\n    await Promise.resolve();\n    // TODO: Add the equivalent dismiss logic\n  }\n\n  function onMouseDown(e: any) {\n    if (payload?.canCloseForModal && e.target === background.current && e.which === 1) {\n      closeDrawer();\n    }\n  }\n\n  function getTransitionName() {\n    // TODO: Complete this logic based on your requirements\n    return 'drawer-item';\n  }\n\n  return (\n    <TransitionGroup className=\"transition-group\">\n      <CSSTransition in={mounted} timeout={250} classNames=\"up\">\n        <StyleLi className={`up`} ref={background} onMouseDown={onMouseDown} onTouchStart={onMouseDown}>\n          <div className=\"container\" style={styles} onClick={(e) => e.stopPropagation()}>\n            {/* Dynamic component rendering... */}\n            {/* <MainContainer /> */}\n            <payload.component />\n          </div>\n        </StyleLi>\n      </CSSTransition>\n    </TransitionGroup>\n  );\n\n  function getClassName() {\n    // TODO: This function will generate a class name based on the payload properties.\n  }\n};\n\nDrawerItem.propTypes = {\n  payload: PropTypes.object.isRequired,\n};\n\nexport default DrawerItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}