{"ast":null,"code":"var _jsxFileName = \"/Users/iseung-won/Desktop/clone/frontend/src/MyComponent.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyComponent = () => {\n  // Use the drawer state from Redux\n  // const drawerState = useSelector((state) => state.drawer);\n\n  // Dispatch function to dispatch actions\n  // const dispatch = useDispatch();\n\n  // Open a new drawer item\n  const handleOpenDrawer = drawerPayload => {\n    // dispatch(presentDrawer(drawerPayload));\n  };\n\n  // Close a specific drawer item\n  const handleCloseDrawer = drawerId => {\n    // dispatch(dismissDrawer(drawerId));\n  };\n\n  // Close all drawers\n  const handleCloseAllDrawers = () => {\n    // dispatch(dismissAll());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleOpenDrawer({\n        id: 'sampleId',\n        component: 'SampleComponent'\n        //...other drawer properties\n      }),\n      children: \"Open New Drawer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), drawerState.items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCloseDrawer(item.id),\n        children: \"Close This Drawer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCloseAllDrawers,\n      children: \"Close All Drawers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MyComponent","handleOpenDrawer","drawerPayload","handleCloseDrawer","drawerId","handleCloseAllDrawers","children","onClick","id","component","fileName","_jsxFileName","lineNumber","columnNumber","drawerState","items","map","item","_c","$RefreshReg$"],"sources":["/Users/iseung-won/Desktop/clone/frontend/src/MyComponent.jsx"],"sourcesContent":["import React from 'react';\n\nconst MyComponent = () => {\n  // Use the drawer state from Redux\n  // const drawerState = useSelector((state) => state.drawer);\n\n  // Dispatch function to dispatch actions\n  // const dispatch = useDispatch();\n\n  // Open a new drawer item\n  const handleOpenDrawer = (drawerPayload) => {\n    // dispatch(presentDrawer(drawerPayload));\n  };\n\n  // Close a specific drawer item\n  const handleCloseDrawer = (drawerId) => {\n    // dispatch(dismissDrawer(drawerId));\n  };\n\n  // Close all drawers\n  const handleCloseAllDrawers = () => {\n    // dispatch(dismissAll());\n  };\n\n  return (\n    <div>\n      {/* Display a button to open a new drawer */}\n      <button\n        onClick={() =>\n          handleOpenDrawer({\n            id: 'sampleId',\n            component: 'SampleComponent',\n            //...other drawer properties\n          })\n        }\n      >\n        Open New Drawer\n      </button>\n\n      {/* Display currently open drawers */}\n      {drawerState.items.map((item) => (\n        <div key={item.id}>\n          {/* Render drawer item */}\n          <button onClick={() => handleCloseDrawer(item.id)}>Close This Drawer</button>\n        </div>\n      ))}\n\n      {/* Button to close all drawers */}\n      <button onClick={handleCloseAllDrawers}>Close All Drawers</button>\n    </div>\n  );\n};\n\nexport default MyComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB;EACA;;EAEA;EACA;;EAEA;EACA,MAAMC,gBAAgB,GAAIC,aAAa,IAAK;IAC1C;EAAA,CACD;;EAED;EACA,MAAMC,iBAAiB,GAAIC,QAAQ,IAAK;IACtC;EAAA,CACD;;EAED;EACA,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClC;EAAA,CACD;EAED,oBACEN,OAAA;IAAAO,QAAA,gBAEEP,OAAA;MACEQ,OAAO,EAAEA,CAAA,KACPN,gBAAgB,CAAC;QACfO,EAAE,EAAE,UAAU;QACdC,SAAS,EAAE;QACX;MACF,CAAC,CACF;MAAAH,QAAA,EACF;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGRC,WAAW,CAACC,KAAK,CAACC,GAAG,CAAEC,IAAI,iBAC1BlB,OAAA;MAAAO,QAAA,eAEEP,OAAA;QAAQQ,OAAO,EAAEA,CAAA,KAAMJ,iBAAiB,CAACc,IAAI,CAACT,EAAE,CAAE;QAAAF,QAAA,EAAC;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC,GAFrEI,IAAI,CAACT,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACN,CAAC,eAGFd,OAAA;MAAQQ,OAAO,EAAEF,qBAAsB;MAAAC,QAAA,EAAC;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAACK,EAAA,GAjDIlB,WAAW;AAmDjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}