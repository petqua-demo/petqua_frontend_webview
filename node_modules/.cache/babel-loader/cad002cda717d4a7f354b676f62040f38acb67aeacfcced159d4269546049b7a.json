{"ast":null,"code":"var _jsxFileName = \"/Users/iseung-won/Desktop/clone/frontend/src/components/drawer/components/Drawer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport DrawerItem from './DrawerItem'; // Assumes that you have a corresponding DrawerItem in React\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Drawer = ({\n  observerHandler\n}) => {\n  _s();\n  const [items, setItems] = useState([]); // This would ideally come from some React context or global state\n\n  const useModal = useMemo(() => {\n    const modalItems = items.filter(item => item.useModal !== false);\n    return modalItems.length > 0;\n  }, [items]);\n  useEffect(() => {\n    if (observerHandler) {\n      // Assuming you have a similar structure to 'addObserver' in your React code\n      // drawerModule.addObserver(observerHandler);\n    }\n  }, [observerHandler]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [useModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: closeDrawer,\n      className: \"drawer-bg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drawer-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(DrawerItem, {\n          payload: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  function closeDrawer() {\n    // Equivalent logic to drawerModule.dismissAll() goes here\n  }\n};\n_s(Drawer, \"uNuPoNc+WO58xeDYEm6bot56rnI=\");\n_c = Drawer;\nexport default Drawer;\nvar _c;\n$RefreshReg$(_c, \"Drawer\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","DrawerItem","jsxDEV","_jsxDEV","Fragment","_Fragment","Drawer","observerHandler","_s","items","setItems","useModal","modalItems","filter","item","length","children","onClick","closeDrawer","className","fileName","_jsxFileName","lineNumber","columnNumber","map","payload","id","_c","$RefreshReg$"],"sources":["/Users/iseung-won/Desktop/clone/frontend/src/components/drawer/components/Drawer.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport DrawerItem from './DrawerItem'; // Assumes that you have a corresponding DrawerItem in React\n\nconst Drawer = ({ observerHandler }: any) => {\n  const [items, setItems] = useState([]); // This would ideally come from some React context or global state\n\n  const useModal = useMemo(() => {\n    const modalItems = items.filter((item: any) => item.useModal !== false);\n    return modalItems.length > 0;\n  }, [items]);\n\n  useEffect(() => {\n    if (observerHandler) {\n      // Assuming you have a similar structure to 'addObserver' in your React code\n      // drawerModule.addObserver(observerHandler);\n    }\n  }, [observerHandler]);\n\n  return (\n    <>\n      {useModal && <div onClick={closeDrawer} className=\"drawer-bg\"></div>}\n      <div className=\"drawer-container\">\n        <ul>\n          {items.map((item: any) => (\n            <DrawerItem key={item.id} payload={item} />\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n\n  function closeDrawer() {\n    // Equivalent logic to drawerModule.dismissAll() goes here\n  }\n};\n\nexport default Drawer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,OAAOC,UAAU,MAAM,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAqB,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC,MAAMa,QAAQ,GAAGX,OAAO,CAAC,MAAM;IAC7B,MAAMY,UAAU,GAAGH,KAAK,CAACI,MAAM,CAAEC,IAAS,IAAKA,IAAI,CAACH,QAAQ,KAAK,KAAK,CAAC;IACvE,OAAOC,UAAU,CAACG,MAAM,GAAG,CAAC;EAC9B,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEXV,SAAS,CAAC,MAAM;IACd,IAAIQ,eAAe,EAAE;MACnB;MACA;IAAA;EAEJ,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,oBACEJ,OAAA,CAAAE,SAAA;IAAAW,QAAA,GACGL,QAAQ,iBAAIR,OAAA;MAAKc,OAAO,EAAEC,WAAY;MAACC,SAAS,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpEpB,OAAA;MAAKgB,SAAS,EAAC,kBAAkB;MAAAH,QAAA,eAC/Bb,OAAA;QAAAa,QAAA,EACGP,KAAK,CAACe,GAAG,CAAEV,IAAS,iBACnBX,OAAA,CAACF,UAAU;UAAewB,OAAO,EAAEX;QAAK,GAAvBA,IAAI,CAACY,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CAC3C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eACN,CAAC;EAGL,SAASL,WAAWA,CAAA,EAAG;IACrB;EAAA;AAEJ,CAAC;AAACV,EAAA,CA/BIF,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AAiCZ,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}