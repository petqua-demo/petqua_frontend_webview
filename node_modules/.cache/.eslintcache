[{"/Users/iseung-won/Desktop/clone/frontend/src/index.tsx":"1","/Users/iseung-won/Desktop/clone/frontend/src/App.tsx":"2","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/drawer/DrawerAction.ts":"3","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/drawer/DrawerReducer.ts":"4","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/drawer/components/Drawer.tsx":"5","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/drawer/components/DrawerItem.tsx":"6","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/drawer/types/index.ts":"7","/Users/iseung-won/Desktop/clone/frontend/src/modules/redux/store.ts":"8","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/toast/ToastReducer.ts":"9","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/toast/ToastAction.ts":"10","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/toast/components/Toast.tsx":"11","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/toast/types/index.ts":"12","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/toast/components/ToastItem.tsx":"13","/Users/iseung-won/Desktop/clone/frontend/src/view/pages/category/styles/categoryListStyle.tsx":"14","/Users/iseung-won/Desktop/clone/frontend/src/view/pages/category/container/categoryListView.tsx":"15","/Users/iseung-won/Desktop/clone/frontend/src/view/pages/category/container/categoryDetailView.tsx":"16","/Users/iseung-won/Desktop/clone/frontend/src/components/resources/category/container/categoryFilter.tsx":"17","/Users/iseung-won/Desktop/clone/frontend/src/components/resources/category/styles/categoryFilterStyle.tsx":"18","/Users/iseung-won/Desktop/clone/frontend/src/components/resources/category/container/categoryItem.tsx":"19","/Users/iseung-won/Desktop/clone/frontend/src/components/resources/category/styles/categoryItemStyle.tsx":"20","/Users/iseung-won/Desktop/clone/frontend/src/view/pages/category/styles/categoryDetailStyle.tsx":"21","/Users/iseung-won/Desktop/clone/frontend/src/assets/data/filter.js":"22","/Users/iseung-won/Desktop/clone/frontend/src/assets/data/fishData.js":"23","/Users/iseung-won/Desktop/clone/frontend/src/components/atoms/container/pageHeader.tsx":"24","/Users/iseung-won/Desktop/clone/frontend/src/components/atoms/styles/pageHeaderStyle.tsx":"25"},{"size":337,"mtime":1700749763404,"results":"26","hashOfConfig":"27"},{"size":2322,"mtime":1700750071716,"results":"28","hashOfConfig":"27"},{"size":1213,"mtime":1700739658416,"results":"29","hashOfConfig":"27"},{"size":4715,"mtime":1692273480647,"results":"30","hashOfConfig":"27"},{"size":1013,"mtime":1692273480647,"results":"31","hashOfConfig":"27"},{"size":3788,"mtime":1700749763403,"results":"32","hashOfConfig":"27"},{"size":841,"mtime":1692273480648,"results":"33","hashOfConfig":"27"},{"size":515,"mtime":1700739811341,"results":"34","hashOfConfig":"27"},{"size":2529,"mtime":1693638390985,"results":"35","hashOfConfig":"27"},{"size":997,"mtime":1693638358438,"results":"36","hashOfConfig":"27"},{"size":425,"mtime":1693636774099,"results":"37","hashOfConfig":"27"},{"size":400,"mtime":1693627878193,"results":"38","hashOfConfig":"27"},{"size":1740,"mtime":1693637867118,"results":"39","hashOfConfig":"27"},{"size":2968,"mtime":1700749763404,"results":"40","hashOfConfig":"27"},{"size":2460,"mtime":1700749763404,"results":"41","hashOfConfig":"27"},{"size":2334,"mtime":1700749990264,"results":"42","hashOfConfig":"27"},{"size":1544,"mtime":1700749763403,"results":"43","hashOfConfig":"27"},{"size":2519,"mtime":1700749763404,"results":"44","hashOfConfig":"27"},{"size":838,"mtime":1700749763403,"results":"45","hashOfConfig":"27"},{"size":1894,"mtime":1700749763404,"results":"46","hashOfConfig":"27"},{"size":4026,"mtime":1700749763404,"results":"47","hashOfConfig":"27"},{"size":489,"mtime":1700749763402,"results":"48","hashOfConfig":"27"},{"size":5451,"mtime":1700749763402,"results":"49","hashOfConfig":"27"},{"size":426,"mtime":1700750193403,"results":"50","hashOfConfig":"27"},{"size":856,"mtime":1700750255239,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"t888g8",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"55"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"55"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"55"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/iseung-won/Desktop/clone/frontend/src/index.tsx",[],[],[],"/Users/iseung-won/Desktop/clone/frontend/src/App.tsx",["139","140","141","142","143","144","145","146","147"],[],"import { useSelector } from 'react-redux';\nimport { useAppDispatch } from './modules/redux/store';\nimport { dismissAll, dismissDrawer, presentDrawer } from './components/modules/drawer/DrawerAction';\nimport Drawer from './components/modules/drawer/components/Drawer';\nimport Toast from './components/modules/toast/components/Toast';\nimport { alert, error, show, success } from './components/modules/toast/ToastAction';\nimport { ToastType } from './components/modules/toast/types';\nimport './assets/scss/styles.scss';\nimport { BrowserRouter, Route, Router, Routes } from 'react-router-dom';\nimport CategoryListView from './view/pages/category/container/categoryListView';\nimport CategoryDetailView from './view/pages/category/container/categoryDetailView';\n\nconst App = () => {\n  const drawerState = useSelector((state: any) => state.drawer);\n  const toastState = useSelector((state: any) => state.toast);\n\n  // Dispatch function to dispatch actions\n\n  const dispatch = useAppDispatch();\n\n  // Open a new drawer item\n  const handleOpenDrawer = (drawerPayload: any) => {\n    dispatch(presentDrawer(drawerPayload));\n  };\n\n  // Close a specific drawer item\n  const handleCloseDrawer = (drawerId: any) => {\n    dispatch(dismissDrawer(drawerId));\n  };\n\n  // Close all drawers\n  const handleCloseAllDrawers = () => {\n    setTimeout(() => {\n      dispatch(dismissAll());\n    }, 250);\n  };\n\n  const openToast = () => {\n    // dispatch(\n    //   show({\n    //     type: ToastType.ERROR,\n    //     message: 'This is a toast message',\n    //   }),\n    // );\n    dispatch(success({ message: 'This is an error toast message' }));\n    // dispatch(\n    //   alert({\n    //     message: 'This is an alert toast message',\n    //   }),\n    // );\n    // dispatch(error({ message: 'This is an error toast message' }));\n  };\n\n  return (\n    <>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<CategoryListView />} />\n\n          <Route path=\"/:id\" element={<CategoryDetailView />} />\n        </Routes>\n      </BrowserRouter>\n\n      {drawerState.items !== undefined && (\n        <div>\n          <Drawer items={drawerState.items} />\n        </div>\n      )}\n      {toastState.items !== undefined && (\n        <div>\n          <Toast items={toastState.items} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/drawer/DrawerAction.ts",[],[],"/Users/iseung-won/Desktop/clone/frontend/src/components/modules/drawer/DrawerReducer.ts",["148"],[],"// import _ from 'lodash';\nimport { createAction, createReducer, createSlice } from '@reduxjs/toolkit';\nimport {\n  CLEAR_DRAWERS,\n  ADD_OBSERVER,\n  REMOVE_OBSERVER,\n  NOTIFY_OBSERVERS,\n  PRESENT_DRAWER,\n  DISMISS_DRAWER,\n  DISMISS_ALL,\n} from './DrawerAction';\nimport { DrawerPosition, DrawerSize, DrawerTransitionName } from './types';\nimport uuid from 'react-uuid';\n\ncreateAction(CLEAR_DRAWERS);\ncreateAction(ADD_OBSERVER);\ncreateAction(REMOVE_OBSERVER);\ncreateAction(NOTIFY_OBSERVERS);\ncreateAction(PRESENT_DRAWER);\ncreateAction(DISMISS_DRAWER);\ncreateAction(DISMISS_ALL);\n\nconst initialState = {\n  items: [],\n  observers: [],\n};\n\nexport const drawerSlice = createSlice({\n  name: 'drawer',\n  initialState,\n  reducers: {\n    clearDrawers: (state) => {\n      state.items = [];\n      state.observers = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(CLEAR_DRAWERS, (state) => {\n      state.items = [];\n      state.observers = [];\n    });\n    builder.addCase(ADD_OBSERVER, (state: any, action: any) => {\n      const observer = {\n        id: uuid(),\n        handler: action.payload.handler,\n      };\n      state.observers = [...state.observers, observer];\n    });\n    builder.addCase(REMOVE_OBSERVER, (state, action: any) => {\n      state.observers = state.observers.filter((observer: any) => observer.id !== action.payload.observerId);\n    });\n    builder.addCase(NOTIFY_OBSERVERS, (state, action: any) => {\n      state.observers.forEach((observe: any) => observe.handler(action.payload.action, action.payload.options));\n    });\n    builder.addCase(PRESENT_DRAWER, (state: any, action: any) => {\n      const drawerItem = {\n        id: action.payload.id ?? uuid(),\n        ...action.payload,\n        useModal: action.payload.useModal ?? true,\n        useCloseButton: action.payload.useCloseButton ?? true,\n        canCloseForModal: action.payload.canCloseForModal ?? true,\n        position: action.payload.position ?? DrawerPosition.BOTTOM,\n        size: action.payload.size ?? DrawerSize.AUTO,\n        backgroundColor: action.payload.backgroundColor ?? 'white',\n        noPadding: action.payload.noPadding ?? false,\n        animationName: action.payload.animationName ?? DrawerTransitionName.DEFAULT,\n        component: action.payload.component,\n      };\n      state.items = [...state.items, drawerItem];\n    });\n    builder.addCase(DISMISS_DRAWER, (state, action: any) => {\n      const remainingItems = state.items.filter((item: any) => item.id !== action.payload.id);\n      state.items = remainingItems;\n    });\n    builder.addCase(DISMISS_ALL, (state) => {\n      state.items = [];\n    });\n  },\n});\n\n// const initialState = {\n//   items: [],\n//   observers: [],\n// };\n\n// const drawerReducer = (state = initialState, action: any) => {\n//   switch (action.type) {\n//     case CLEAR_DRAWERS:\n//       return {\n//         ...state,\n//         items: [],\n//         observers: [],\n//       };\n//     case ADD_OBSERVER:\n//       const observer = {\n//         id: 1,\n//         handler: action.payload.handler,\n//       };\n//       return {\n//         ...state,\n//         observers: [...state.observers, observer],\n//       };\n//     case REMOVE_OBSERVER:\n//       return {\n//         ...state,\n//         observers: state.observers.filter((observer: any) => observer.id !== action.payload.observerId),\n//       };\n//     case NOTIFY_OBSERVERS:\n//       state.observers.forEach((observe: any) => observe.handler(action.payload.action, action.payload.options));\n//       return state;\n//     case PRESENT_DRAWER:\n//       const drawerItem = {\n//         id: action.payload.id ?? 1,\n//         ...action.payload,\n//         useModal: action.payload.useModal ?? true,\n//         useCloseButton: action.payload.useCloseButton ?? true,\n//         canCloseForModal: action.payload.canCloseForModal ?? true,\n//         position: action.payload.position ?? DrawerPosition.BOTTOM,\n//         size: action.payload.size ?? DrawerSize.AUTO,\n//         backgroundColor: action.payload.backgroundColor ?? 'white',\n//         noPadding: action.payload.noPadding ?? false,\n//         animationName: action.payload.animationName ?? DrawerTransitionName.DEFAULT,\n//         component: action.payload.component,\n//       };\n//       return {\n//         ...state,\n//         items: [...state.items, drawerItem],\n//       };\n//     case DISMISS_DRAWER:\n//       const remainingItems = state.items.filter((item: any) => item.id !== action.payload.id);\n//       return {\n//         ...state,\n//         items: remainingItems,\n//       };\n//     case DISMISS_ALL:\n//       return {\n//         ...state,\n//         items: [],\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// export default drawerReducer;\n","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/drawer/components/Drawer.tsx",["149","150"],[],"import React, { useState, useEffect, useMemo } from 'react';\nimport DrawerItem from './DrawerItem'; // Assumes that you have a corresponding DrawerItem in React\nimport './Drawer.scss';\n\nconst Drawer = ({ observerHandler, items }: any) => {\n  // This would ideally come from some React context or global state\n\n  const [isClose, setIsClose] = useState(false);\n\n  const useModal = useMemo(() => {\n    setIsClose(false);\n    const modalItems = items.filter((item: any) => item.useModal !== false);\n    return modalItems.length > 0;\n  }, [items]);\n\n  function closeDrawer() {\n    setIsClose(true);\n    // Equivalent logic to drawerModule.dismissAll() goes here\n  }\n\n  return (\n    <>\n      <div className=\"drawer-container\">\n        {items.length !== 0 && <div onClick={closeDrawer} className=\"drawer-bg\"></div>}\n        <ul>\n          {items.map((item: any) => (\n            <DrawerItem key={item.id} payload={{ ...item, isClose }} />\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Drawer;\n","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/drawer/components/DrawerItem.tsx",["151"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './Drawer.scss';\nimport { DrawerPosition, DrawerSize } from '../types';\n\nconst DrawerItem = ({ payload }: any) => {\n  const [mounted, setMounted] = useState(false);\n  const background = useRef(null);\n\n  const styles = { backgroundColor: payload?.backgroundColor };\n\n  useEffect(() => {\n    if (payload.isClose) {\n      closeDrawer();\n    }\n  }, [payload.isClose]);\n\n  useEffect(() => {\n    (async () => {\n      await openDrawer();\n    })();\n  }, []);\n\n  async function openDrawer() {\n    await Promise.resolve();\n    setMounted(true);\n  }\n\n  async function closeDrawer() {\n    setMounted(false);\n    setTimeout(() => {\n      payload.event?.onClose();\n    }, 250);\n\n    // TODO: Add the equivalent dismiss logic\n  }\n\n  function onMouseDown(e: any) {\n    if (payload?.canCloseForModal && e.target === background.current && e.which === 1) {\n      closeDrawer();\n    }\n  }\n\n  function getClassNames() {\n    const classes: any = {};\n\n    if (payload?.noPadding) {\n      classes['no-padding'] = true;\n    }\n\n    if (payload?.position === DrawerPosition.BOTTOM) {\n      classes['position-bottom'] = true;\n    } else if (payload?.position === DrawerPosition.CENTER) {\n      classes['position-center'] = true;\n    } else if (payload?.position === DrawerPosition.TOP) {\n      classes['position-top'] = true;\n    } else if (payload?.position === DrawerPosition.BOTTOM_NO_PADDING) {\n      classes['position-bottom-no-padding'] = true;\n    }\n\n    if (payload?.size === DrawerSize.FULL) {\n      classes['full'] = true;\n    }\n\n    if (payload?.useModal === true) {\n      classes['modal'] = true;\n    }\n    const setClass = Object.keys(classes)\n      .map((key) => classes[key] && key)\n      .join(' ');\n    return setClass;\n  }\n\n  function getTransitionName() {\n    if (payload?.position === DrawerPosition.CENTER) {\n      if (mounted) {\n        if (payload?.transitionName === 'up') {\n          return 'up-center';\n        } else if (payload?.transitionName === 'down') {\n          return 'down-center-in';\n        }\n        return 'fadeIn-center';\n      }\n      if (payload?.transitionName === 'up') {\n        return 'down-center';\n      } else if (payload?.transitionName === 'down') {\n        return 'down-center-out';\n      }\n      return 'fadeOut-center';\n    }\n    if (payload?.position === DrawerPosition.TOP) {\n      if (mounted) {\n        return 'down-top';\n      }\n      return 'up-top';\n    }\n    if (mounted) {\n      return 'up';\n    }\n    return 'down';\n  }\n\n  return (\n    <TransitionGroup className=\"transition-group\">\n      <CSSTransition in={mounted} timeout={250} classNames={getTransitionName()}>\n        <li\n          className={`${getTransitionName()} ${getClassNames()} drawer-item`}\n          ref={background}\n          onMouseDown={onMouseDown}\n          onTouchStart={onMouseDown}\n        >\n          <div className=\"container\" style={styles} onClick={(e) => e.stopPropagation()}>\n            {/* Dynamic component rendering... */}\n            {/* <MainContainer /> */}\n            <payload.component payload={payload} close={closeDrawer} />\n            {payload.useCloseButton && (\n              <div className=\"drawer-backward-header\">\n                <div className=\"drawer-backward-header__container\">\n                  <button className=\"drawer-backward-header__button\">\n                    <p onClick={closeDrawer}>닫기</p>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </li>\n      </CSSTransition>\n    </TransitionGroup>\n  );\n};\n\nDrawerItem.propTypes = {\n  payload: PropTypes.object.isRequired,\n};\n\nexport default DrawerItem;\n","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/drawer/types/index.ts",[],[],"/Users/iseung-won/Desktop/clone/frontend/src/modules/redux/store.ts",["152"],[],"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { drawerSlice } from '../../components/modules/drawer/DrawerReducer';\nimport { toastSlice } from '../../components/modules/toast/ToastReducer';\n\nconst store = configureStore({\n  reducer: {\n    drawer: drawerSlice.reducer,\n    toast: toastSlice.reducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch: () => AppDispatch = useDispatch;\n\nexport default store;\n","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/toast/ToastReducer.ts",[],[],"/Users/iseung-won/Desktop/clone/frontend/src/components/modules/toast/ToastAction.ts",[],[],"/Users/iseung-won/Desktop/clone/frontend/src/components/modules/toast/components/Toast.tsx",["153","154"],[],"import React, { useState, useEffect } from 'react';\nimport ToastItem from './ToastItem';\n\nconst ToastContainer = ({ items }: any) => {\n  const [isClose, setIsClose] = useState(false);\n\n  return (\n    <div className=\"toast-container\">\n      <ul>\n        {items.map((item: any) => (\n          <ToastItem key={item.id} payload={{ ...item, isClose }} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ToastContainer;\n","/Users/iseung-won/Desktop/clone/frontend/src/components/modules/toast/types/index.ts",[],[],"/Users/iseung-won/Desktop/clone/frontend/src/components/modules/toast/components/ToastItem.tsx",["155","156","157","158"],[],"import React, { useEffect, useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { useDispatch } from 'react-redux';\nimport './Toast.scss';\nimport { hideAll } from '../ToastAction';\n\nconst ToastItem = ({ payload }: any) => {\n  const { type, message, margin, duration = 3500, useCloseButton } = payload;\n  const [mounted, setMounted] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const itemPosition = {\n    bottom: margin?.bottom ? `${margin.bottom}px` : null,\n    top: margin?.top ? `${margin.top}px` : null,\n    left: margin?.left ? `${margin.left}px` : null,\n    right: margin?.right ? `${margin.right}px` : null,\n  };\n\n  useEffect(() => {\n    (async () => {\n      await openToast();\n      setTimeout(() => {\n        closeToast();\n      }, duration);\n    })();\n  }, [duration]);\n\n  async function openToast() {\n    await Promise.resolve();\n    setMounted(true);\n  }\n\n  function closeToast() {\n    setMounted(false);\n    setTimeout(() => {\n      dispatch(hideAll());\n    }, 250);\n  }\n\n  function getTransitionName() {\n    if (mounted) {\n      return 'fadeIn';\n    }\n    return 'fadeOut';\n  }\n\n  return (\n    <li className={`toast-item ${type} ${getTransitionName()}`}>\n      <div className=\"toast-item-container\">\n        {/* For simplicity, I'm using a placeholder icon instead of SVG */}\n        <p className=\"toast-body\">{message}</p>\n        {useCloseButton && (\n          <button\n            onClick={() => {\n              closeToast();\n              // Call hide toast function here\n              // e.g., toastModule.hide(props.data);\n            }}\n          >\n            닫기\n          </button>\n        )}\n      </div>\n    </li>\n  );\n};\n\nexport default ToastItem;\n","/Users/iseung-won/Desktop/clone/frontend/src/view/pages/category/styles/categoryListStyle.tsx",[],[],"/Users/iseung-won/Desktop/clone/frontend/src/view/pages/category/container/categoryListView.tsx",["159","160","161","162"],[],"import * as c from '../styles/categoryListStyle';\nimport { dismissAll, presentDrawer } from '../../../../components/modules/drawer/DrawerAction';\nimport CategoryFilter from '../../../../components/resources/category/container/categoryFilter';\nimport { useDispatch } from 'react-redux';\nimport { useAppDispatch } from '../../../../modules/redux/store';\nimport CategoryItem from '../../../../components/resources/category/container/categoryItem';\nimport { Link, Route, Router, useNavigate } from 'react-router-dom';\nimport { Filter } from '../../../../assets/data/filter';\nimport { FishData } from '../../../..//assets/data/fishData';\nimport PageHeader from '../../../../components/atoms/container/pageHeader';\n\nconst CategoryListView = () => {\n  const dispatch = useAppDispatch();\n  const nav = useNavigate();\n\n  function handleOpenDrawer(drawerPayload: any) {\n    dispatch(presentDrawer(drawerPayload));\n  }\n\n  function handleNavigate(id: number, data: any) {\n    nav(`${id}`, {\n      state: data,\n    });\n  }\n\n  return (\n    <c.CategoryListContainer>\n      <PageHeader title={'구피'} />\n      <c.CategoryFilterContainer>\n        <c.CategoryFilterItem\n          onClick={() => {\n            handleOpenDrawer({\n              component: CategoryFilter,\n              useCloseButton: false,\n              data: {\n                Filter: Filter['species']['goofy'],\n              },\n              event: {\n                onClose: () => {\n                  dispatch(dismissAll());\n                },\n              },\n            });\n          }}\n        >\n          어종\n        </c.CategoryFilterItem>\n        <c.CategoryFilterItem\n          onClick={() => {\n            handleOpenDrawer({\n              component: CategoryFilter,\n              useCloseButton: false,\n              data: {\n                Filter: Filter['filter'],\n              },\n              event: {\n                onClose: () => {\n                  dispatch(dismissAll());\n                },\n              },\n            });\n          }}\n        >\n          펫쿠아 추천순\n        </c.CategoryFilterItem>\n      </c.CategoryFilterContainer>\n      <c.CategoryListBody>\n        {FishData.items.map((item: any) => (\n          <div onClick={() => handleNavigate(item.productId, item)}>\n            <CategoryItem key={item.productId} data={{ ...item }} />\n          </div>\n        ))}\n      </c.CategoryListBody>\n    </c.CategoryListContainer>\n  );\n};\n\nexport default CategoryListView;\n","/Users/iseung-won/Desktop/clone/frontend/src/view/pages/category/container/categoryDetailView.tsx",["163","164"],[],"import * as c from '../styles/categoryDetailStyle';\nimport { Filter } from '../../../../assets/data/filter';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PageHeader from '../../../../components/atoms/container/pageHeader';\nconst CategoryDetailView = () => {\n  const location = useLocation();\n  const data = location.state;\n\n  return (\n    <c.CategoryDetailContainer>\n      <PageHeader title={'구피'} />\n      <c.CategoryDetailImageContainer>\n        <c.CategoryDetailImage src={data.imageUrl} />\n      </c.CategoryDetailImageContainer>\n      <c.CategeoryDetailInfoContainer>\n        <c.CategoryStoreName>{data.storeName}</c.CategoryStoreName>\n        <c.CategoryDetailInfoTitle>{data.productName}</c.CategoryDetailInfoTitle>\n        <c.CategoryDetailCategory>{data.category}</c.CategoryDetailCategory>\n        <c.CategoryDetailOriginPrice>{data.originPrice.toLocaleString()}원</c.CategoryDetailOriginPrice>\n        <c.CategoryDetailDiscountPriceContainer>\n          <c.CategoryDetailDiscountRate>{data.discountRate}%</c.CategoryDetailDiscountRate>\n          <c.CategoryDetailSalePrice>{data.salePrice.toLocaleString()}원</c.CategoryDetailSalePrice>\n        </c.CategoryDetailDiscountPriceContainer>\n        <c.CategoryDetailDescriptionContainer>\n          <c.CategoryDetailDescription>{data.productDescription}</c.CategoryDetailDescription>\n        </c.CategoryDetailDescriptionContainer>\n        <c.CategoryDetailImage src={data.noticeImg} />\n        <c.CategoryDetailProductInfoContainer>\n          <c.CategoryDetailProductInfoTitle>상품정보</c.CategoryDetailProductInfoTitle>\n          {data.productInfo.map((item: any) => (\n            <c.CategoryDetailProductInfoItem>\n              <c.CategoryDetailProductInfoItemTitle>{item.title}</c.CategoryDetailProductInfoItemTitle>\n              <c.CategoryDetailProductInfoItemContent>{item.description}</c.CategoryDetailProductInfoItemContent>\n            </c.CategoryDetailProductInfoItem>\n          ))}\n        </c.CategoryDetailProductInfoContainer>\n      </c.CategeoryDetailInfoContainer>\n      <c.CategoryDetailButtomContainer>\n        <c.CategoryDetailBottomButton>입양하기</c.CategoryDetailBottomButton>\n      </c.CategoryDetailButtomContainer>\n    </c.CategoryDetailContainer>\n  );\n};\n\nexport default CategoryDetailView;\n","/Users/iseung-won/Desktop/clone/frontend/src/components/resources/category/container/categoryFilter.tsx",["165","166","167"],[],"import { useEffect, useState } from 'react';\nimport * as s from '../styles/categoryFilterStyle';\nimport { useSelector } from 'react-redux';\nimport { useAppDispatch } from '../../../../modules/redux/store';\nimport { success } from '../../../../components/modules/toast/ToastAction';\n\nconst CategoryFilter = ({ payload, close }: any) => {\n  const { event, data } = payload;\n  const [isCheck, setIsCheck] = useState(0);\n  const dispatch = useAppDispatch();\n\n  function handleClose() {\n    close();\n    setTimeout(() => {\n      dispatch(success({ message: '필터가 적용되었습니다.' }));\n    }, 250);\n  }\n  return (\n    <s.CategoryFilterContainer>\n      <s.CategoryFilterHeader>\n        <s.CategoryFilterHeaderTitle>{data?.Filter?.title}</s.CategoryFilterHeaderTitle>\n      </s.CategoryFilterHeader>\n      <s.CategoryFilterBody>\n        {data?.Filter?.items.map((item: any) => (\n          <s.CategoryFilterBodyItem onClick={() => setIsCheck(item.id)} id={item.id}>\n            <s.CategoryFilterBodyItemCircle>\n              {isCheck === item.id && <s.CategoryFilterBodyItemCircleInner />}\n            </s.CategoryFilterBodyItemCircle>\n            <s.CategoryFilterItemTitle>{item.name}</s.CategoryFilterItemTitle>\n          </s.CategoryFilterBodyItem>\n        ))}\n      </s.CategoryFilterBody>\n      <s.CategoryFilterButtonContainer>\n        <s.CategoryFilterButton onClick={handleClose}>적용하기</s.CategoryFilterButton>\n      </s.CategoryFilterButtonContainer>\n    </s.CategoryFilterContainer>\n  );\n};\n\nexport default CategoryFilter;\n","/Users/iseung-won/Desktop/clone/frontend/src/components/resources/category/styles/categoryFilterStyle.tsx",[],[],"/Users/iseung-won/Desktop/clone/frontend/src/components/resources/category/container/categoryItem.tsx",[],[],"/Users/iseung-won/Desktop/clone/frontend/src/components/resources/category/styles/categoryItemStyle.tsx",[],[],"/Users/iseung-won/Desktop/clone/frontend/src/view/pages/category/styles/categoryDetailStyle.tsx",[],[],"/Users/iseung-won/Desktop/clone/frontend/src/assets/data/filter.js",[],[],[],"/Users/iseung-won/Desktop/clone/frontend/src/assets/data/fishData.js",[],[],"/Users/iseung-won/Desktop/clone/frontend/src/components/atoms/container/pageHeader.tsx",[],[],"/Users/iseung-won/Desktop/clone/frontend/src/components/atoms/styles/pageHeaderStyle.tsx",[],[],{"ruleId":"168","severity":1,"message":"169","line":6,"column":10,"nodeType":"170","messageId":"171","endLine":6,"endColumn":15},{"ruleId":"168","severity":1,"message":"172","line":6,"column":17,"nodeType":"170","messageId":"171","endLine":6,"endColumn":22},{"ruleId":"168","severity":1,"message":"173","line":6,"column":24,"nodeType":"170","messageId":"171","endLine":6,"endColumn":28},{"ruleId":"168","severity":1,"message":"174","line":7,"column":10,"nodeType":"170","messageId":"171","endLine":7,"endColumn":19},{"ruleId":"168","severity":1,"message":"175","line":9,"column":32,"nodeType":"170","messageId":"171","endLine":9,"endColumn":38},{"ruleId":"168","severity":1,"message":"176","line":22,"column":9,"nodeType":"170","messageId":"171","endLine":22,"endColumn":25},{"ruleId":"168","severity":1,"message":"177","line":27,"column":9,"nodeType":"170","messageId":"171","endLine":27,"endColumn":26},{"ruleId":"168","severity":1,"message":"178","line":32,"column":9,"nodeType":"170","messageId":"171","endLine":32,"endColumn":30},{"ruleId":"168","severity":1,"message":"179","line":38,"column":9,"nodeType":"170","messageId":"171","endLine":38,"endColumn":18},{"ruleId":"168","severity":1,"message":"180","line":2,"column":24,"nodeType":"170","messageId":"171","endLine":2,"endColumn":37},{"ruleId":"168","severity":1,"message":"181","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"182","line":10,"column":9,"nodeType":"170","messageId":"171","endLine":10,"endColumn":17},{"ruleId":"183","severity":1,"message":"184","line":17,"column":6,"nodeType":"185","endLine":17,"endColumn":23,"suggestions":"186"},{"ruleId":"168","severity":1,"message":"187","line":1,"column":10,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"181","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"188","line":5,"column":19,"nodeType":"170","messageId":"171","endLine":5,"endColumn":29},{"ruleId":"168","severity":1,"message":"189","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":23},{"ruleId":"168","severity":1,"message":"190","line":2,"column":25,"nodeType":"170","messageId":"171","endLine":2,"endColumn":40},{"ruleId":"168","severity":1,"message":"191","line":13,"column":9,"nodeType":"170","messageId":"171","endLine":13,"endColumn":21},{"ruleId":"183","severity":1,"message":"192","line":27,"column":6,"nodeType":"185","endLine":27,"endColumn":16,"suggestions":"193"},{"ruleId":"168","severity":1,"message":"194","line":4,"column":10,"nodeType":"170","messageId":"171","endLine":4,"endColumn":21},{"ruleId":"168","severity":1,"message":"195","line":7,"column":10,"nodeType":"170","messageId":"171","endLine":7,"endColumn":14},{"ruleId":"168","severity":1,"message":"196","line":7,"column":16,"nodeType":"170","messageId":"171","endLine":7,"endColumn":21},{"ruleId":"168","severity":1,"message":"175","line":7,"column":23,"nodeType":"170","messageId":"171","endLine":7,"endColumn":29},{"ruleId":"168","severity":1,"message":"197","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":16},{"ruleId":"168","severity":1,"message":"181","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":19},{"ruleId":"168","severity":1,"message":"181","line":1,"column":10,"nodeType":"170","messageId":"171","endLine":1,"endColumn":19},{"ruleId":"168","severity":1,"message":"198","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":21},{"ruleId":"168","severity":1,"message":"199","line":8,"column":11,"nodeType":"170","messageId":"171","endLine":8,"endColumn":16},"@typescript-eslint/no-unused-vars","'alert' is defined but never used.","Identifier","unusedVar","'error' is defined but never used.","'show' is defined but never used.","'ToastType' is defined but never used.","'Router' is defined but never used.","'handleOpenDrawer' is assigned a value but never used.","'handleCloseDrawer' is assigned a value but never used.","'handleCloseAllDrawers' is assigned a value but never used.","'openToast' is assigned a value but never used.","'createReducer' is defined but never used.","'useEffect' is defined but never used.","'useModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'closeDrawer'. Either include it or remove the dependency array.","ArrayExpression",["200"],"'combineReducers' is defined but never used.","'setIsClose' is assigned a value but never used.","'CSSTransition' is defined but never used.","'TransitionGroup' is defined but never used.","'itemPosition' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'closeToast'. Either include it or remove the dependency array.",["201"],"'useDispatch' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'Filter' is defined but never used.","'useSelector' is defined but never used.","'event' is assigned a value but never used.",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [closeDrawer, payload.isClose]",{"range":"206","text":"207"},"Update the dependencies array to be: [closeToast, duration]",{"range":"208","text":"209"},[521,538],"[closeDrawer, payload.isClose]",[830,840],"[closeToast, duration]"]